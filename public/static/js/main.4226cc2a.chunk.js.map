{"version":3,"sources":["services/url.js","store/reducer.js","components/settings.js","components/displayCard.js","components/mainWindow.js","assets/logo.jpg","components/main.js","App.js","store/store.js","index.js"],"names":["localServer","loadPorts","loadConfig","saveConfig","connectToComPort","sendCommand","configSlice","createSlice","name","initialState","categories","selectedCategory","id","comPorts","selectedComPort","deskNum","server","overrideCategory","configLoaded","reducers","setCategories","state","action","payload","setSelectedCategory","setComPorts","setSelectedComPort","setDeskNum","setOverrideCategory","setConfigLoaded","setServer","actions","styles","headerStyle","textAlign","cardContainer","margin","display","flexDirection","justifyContent","buttonsStyle","Settings","props","dispatch","useDispatch","useSelector","Config","category","ports","comPort","useState","config","setConfig","onSubmit","a","x","filter","c","parseInt","configurations","desk","axios","post","urls","localStorage","setItem","JSON","stringify","history","push","handleInputChange","value","conf","className","style","Form","Control","as","size","onChange","e","target","map","port","index","type","placeholder","Button","variant","onClick","DisplayCard","title","content","Card","Header","Body","Title","flexDircetion","MainWindow","current","setCurrent","waiting","setWaiting","isOn","setIsOn","serverURLS","loadAllCats","getCategoryStatus","getNextCustomer","repeatCustomer","socketServer","loadUpdates","cats","console","log","currentCat","message","handleNext","window","data","num","customer","handleOnOff","handleRepeat","useEffect","get","setInterval","io","on","fontSize","fontWeight","Main","showError","setShowError","showLogo","setShowLogo","loadData","parse","getItem","localConfig","status","setTimeout","onConfirm","src","logo","heigh","width","marginTop","App","path","component","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4226cc2a.chunk.js","sourcesContent":["const mainServer = 'http://iBell.local:4000';\nconst localServer = 'http://localhost:3020/api';\n\nexport default {\n  // loadAllCats: `${mainServer}/api/cats`,\n  // getCategoryStatus: `${mainServer}/api/cats/getStatus`,\n  // getNextCustomer: `${mainServer}/api/cats/popCustomer`,\n  // repeatCustomer: `${mainServer}/api/cats/repeatCustomerNumber`,\n  // socketServer: `${mainServer}/`,\n  loadPorts: `${localServer}/getPorts`,\n  loadConfig: `${localServer}/loadConf`,\n  saveConfig: `${localServer}/saveConf`,\n  connectToComPort: `${localServer}/connectToSerial`,\n  sendCommand: `${localServer}/sendCommand`,\n}","import { createSlice } from '@reduxjs/toolkit'\n\nexport const configSlice = createSlice({\n    name: 'Settings',\n    initialState: {\n        categories: [],\n        selectedCategory: { id: 0, name: '-' },\n        comPorts: [],\n        selectedComPort: '',\n        deskNum: 0,\n        server: '',\n        overrideCategory: '',\n        configLoaded: false\n    },\n    reducers: {\n        setCategories: (state, action) => {\n            state.categories = action.payload;\n        },\n        setSelectedCategory: (state, action) => {\n            state.selectedCategory = action.payload;\n        },\n        setComPorts: (state, action) => {\n            state.comPorts = action.payload;\n        },\n        setSelectedComPort: (state, action) => {\n            state.selectedComPort = action.payload;\n        },\n        setDeskNum: (state, action) => {\n            state.deskNum = action.payload;\n        },\n        setOverrideCategory: (state, action) => {\n            state.overrideCategory = action.payload;\n        },\n        setConfigLoaded: state => {\n            state.configLoaded = true\n        },\n        setServer: (state, action) => {\n            state.server = action.payload;\n        }\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n    setCategories,\n    setSelectedCategory,\n    setComPorts,\n    setSelectedComPort,\n    setDeskNum,\n    setOverrideCategory,\n    setConfigLoaded,\n    setServer\n\n} = configSlice.actions\n\nexport default configSlice.reducer","import { Form, Button } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport urls from '../services/url';\nimport axios from 'axios';\nimport { setDeskNum, setSelectedCategory, setSelectedComPort, setServer } from \"../store/reducer\";\n\nconst Settings = props => {\n\n    const dispatch = useDispatch();\n    const categories = useSelector(state => state.Config.categories);\n    const category = useSelector(state => state.Config.selectedCategory);\n    const deskNum = useSelector(state => state.Config.deskNum);\n    const ports = useSelector(state => state.Config.comPorts);\n    const comPort = useSelector(state => state.Config.selectedComPort);\n    const server = useSelector(state => state.Config.server);\n    const overrideCategory = useSelector(state => state.Config.overrideCategory)\n\n    const [config, setConfig] = useState({\n        selectedCategory: category.id,\n        selectedComPort: comPort,\n        deskNum,\n        server\n    });\n\n    const onSubmit = async () => {\n        dispatch(setSelectedComPort(config.selectedComPort));\n        dispatch(setServer(config.server));\n        const x = categories.filter(c => c.id == config.selectedCategory);\n        const y = x[0] ? x[0] : { id: 0, name: '' }\n        dispatch(setSelectedCategory(x[0]));\n        dispatch(setDeskNum(parseInt(config.deskNum)));\n\n        try {\n            const configurations = {\n                desk: config.deskNum,\n                category: config.selectedCategory,\n                comPort: config.selectedComPort,\n                server: config.server\n            }\n            await axios.post(\n                urls.saveConfig,\n                configurations\n            );\n            localStorage.setItem('config', JSON.stringify(configurations))\n\n            props.history.push('/')\n        } catch (e) {\n\n        }\n    }\n\n    const handleInputChange = ({ name, value }) => {\n        if (name === 'selectedCategory') {\n            const conf = { ...config, [name]: value };\n            setConfig(conf);\n        }\n        else {\n            const conf = { ...config, [name]: value };\n            setConfig(conf);\n        }\n    }\n\n    return (\n        <div className=''>\n            <div className='alert alert-secondary'\n                style={styles.headerStyle}>\n                <h1>Settings</h1>\n            </div>\n            <div className='container'>\n                <Form>\n                    <Form.Control as=\"select\" size=\"lg\" name='selectedCategory'\n                        onChange={(e) => handleInputChange(e.target)} value={config.selectedCategory}>\n                        {categories.map(category => {\n                            return (\n                                <option key={category.id} value={category.id}>{category.name}</option>\n                            )\n                        })}\n\n                    </Form.Control>\n                    <br />\n                    <Form.Control as=\"select\" size=\"lg\"\n                        onChange={(e) => handleInputChange(e.target)}\n                        name={'selectedComPort'}\n                        value={config.selectedComPort}\n                    >\n                        {ports.map((port, index) => {\n                            return (\n                                <option key={index} value={port}>{port}</option>\n                            )\n                        })}\n                    </Form.Control>\n\n                    <br />\n                    <Form.Control size=\"lg\" type=\"number\" placeholder=\"Desk Number\"\n                        name={'deskNum'}\n                        value={config.deskNum}\n                        onChange={(e) => handleInputChange(e.target)}\n                    />\n                    <br />\n\n                    <Form.Control size=\"lg\" type=\"text\" placeholder=\"Server\"\n                        name={'server'}\n                        value={config.server}\n                        onChange={(e) => handleInputChange(e.target)}\n                    />\n                    <br />\n                    <Button variant=\"success\" size='lg' onClick={onSubmit}>\n                        Save\n                    </Button>\n\n                </Form>\n            </div>\n        </div>\n    )\n}\nconst styles = {\n    headerStyle: {\n        textAlign: 'center'\n    },\n    cardContainer: {\n        margin: 20,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around'\n    },\n    buttonsStyle: {\n        margin: 25,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around'\n    }\n}\n\nexport default Settings;","import {Card, Button} from 'react-bootstrap'\n\nconst DisplayCard = props => {\n    const {title, content, type} = props;\n    return(\n        <div>\n            <Card className={type+ \" text-white\"}>\n              <Card.Header>\n                  <h1>{title}</h1>\n              </Card.Header>\n              <Card.Body className='bg-secondary'>\n                <Card.Title><h1>{content}</h1></Card.Title>\n              </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default DisplayCard","import DisplayCard from './displayCard';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport urls from '../services/url';\nimport { io } from 'socket.io-client';\n\n\nconst MainWindow = props => {\n\n  const category = useSelector(state => state.Config.selectedCategory);\n  const deskNum = useSelector(state => state.Config.deskNum);\n  const [current, setCurrent] = useState(0);\n  const [waiting, setWaiting] = useState(0)\n  const [isOn, setIsOn] = useState(true);\n\n  const server = useSelector(state => state.Config.server);\n\n  let serverURLS = {\n    loadAllCats: `${server}/api/cats`,\n    getCategoryStatus: `${server}/api/cats/getStatus`,\n    getNextCustomer: `${server}/api/cats/popCustomer`,\n    repeatCustomer: `${server}/api/cats/repeatCustomerNumber`,\n    socketServer: `${server}/`,\n  }\n\n\n  const loadUpdates = async (cats, type) => {\n    try {\n      console.log(type)\n      const currentCat = cats.filter(c => parseInt(c.id) === parseInt(category.id))[0];\n      console.log(cats, category)\n      setCurrent(currentCat.current);\n      setWaiting(currentCat.waiting === null ? 0 : currentCat.waiting)\n    } catch (e) {\n      console.log(e.message)\n    }\n\n  }\n\n  const handleNext = async () => {\n    try {\n      const { data } = await axios.post(serverURLS.getNextCustomer, {\n        id: category.id,\n        window: deskNum\n      });\n      await axios.post(`${urls.sendCommand}/`, {\n        type: 'A',\n        num: data.customer\n      })\n\n    } catch (e) {\n\n    }\n  }\n\n  const handleOnOff = async () => {\n    try {\n      if (!isOn) {\n        handleNext();\n      } else {\n        await axios.post(`${urls.sendCommand}/`, {\n          type: 'ON',\n          num: null\n        });\n      }\n      setIsOn(!isOn);\n    } catch (e) {\n    }\n  }\n\n  const handleRepeat = async () => {\n    try {\n      await axios.post(serverURLS.repeatCustomer, {\n        num: current,\n        window: deskNum\n      })\n    } catch (e) {\n\n    }\n  }\n\n  useEffect(async () => {\n    const { data } = await axios.get(serverURLS.getCategoryStatus);\n    loadUpdates(data.data, 'http');\n    setInterval(async () => {\n      const { data } = await axios.get(serverURLS.getCategoryStatus);\n      loadUpdates(data.data, 'http');\n    }, 1000)\n    const socket = io(serverURLS.socketServer);\n    socket.on('cats', (cats) => {\n      loadUpdates(cats.cats, 'socket')\n    });\n\n  }, [])\n\n  return (\n    <div>\n\n      <div>\n        <div className='alert alert-dark'\n          style={styles.headerStyle}>\n          <h2>{category?.name ? category.name : '-'}</h2>\n          <h2>Desk: {deskNum}</h2>\n          <Button variant=\"default\" size='lg'\n            onClick={() => props.history.push('/settings')}>\n            <span style={{ fontSize: 30, fontWeight: 'bold', margin: 0 }}>...</span>\n          </Button>\n        </div>\n        <div style={styles.cardContainer}>\n          <DisplayCard title={'Current'} content={current} type={'bg-info'} />\n          <DisplayCard title={'Waiting'} content={waiting} type={'bg-success'} />\n        </div>\n\n        <div style={styles.buttonsStyle}>\n          <Button variant=\"primary\" size='lg'\n            onClick={handleNext}\n          >Next</Button>\n          <Button variant=\"primary\" size='lg'\n            onClick={handleRepeat}\n          >Repeat</Button>\n          <Button variant={isOn ? \"success\" : \"danger\"} size='lg' onClick={handleOnOff}>\n            {isOn ? 'ON' : 'OFF'}\n          </Button>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  headerStyle: {\n    display: 'flex',\n    flexDircetion: 'row',\n    justifyContent: 'space-between',\n    textAlign: 'center'\n  },\n  cardContainer: {\n    margin: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  buttonsStyle: {\n    margin: 35,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n}\n\nexport default MainWindow;","export default __webpack_public_path__ + \"static/media/logo.4b7f5575.jpg\";","import MainWindow from \"./mainWindow\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport {\n    setCategories,\n    setSelectedCategory,\n    setComPorts,\n    setSelectedComPort,\n    setDeskNum,\n    setConfigLoaded,\n    setServer\n} from '../store/reducer';\nimport urls from '../services/url';\nimport SweetAlert from 'react-bootstrap-sweetalert'\nimport logo from '../assets/logo.jpg'\n\nconst Main = props => {\n\n    const dispatch = useDispatch();\n    const configLoaded = useSelector(state => state.Config.configLoaded)\n    const [showError, setShowError] = useState(false)\n    const [showLogo, setShowLogo] = useState(true);\n\n    const loadData = async () => {\n\n        try {\n\n            const cats = [{ id: 1, name: 'Receiption' }, { id: 2, name: 'M.R.I' }]\n            dispatch(setCategories(cats));\n\n            // loadSerial ports\n            const { data: ports } = await axios.get(urls.loadPorts);\n            dispatch(setComPorts(ports));\n\n            // load current config\n            let config = JSON.parse(localStorage.getItem('config'));\n            if (!config) {\n                const { data: localConfig } = await axios.get(urls.loadConfig);\n                config = localConfig\n                localStorage.setItem('config', JSON.stringify(config));\n            }\n\n            dispatch(setDeskNum(config.desk));\n            dispatch(setSelectedComPort(config.comPort));\n            dispatch(setServer(config.server));\n\n            const currentCat = cats.filter(c => parseInt(c.id) === parseInt(config.category));\n            dispatch(setSelectedCategory(currentCat[0]));\n            dispatch(setConfigLoaded())\n\n        } catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    useEffect(async () => {\n        const { data } = await axios.get(urls.connectToComPort);\n        if (data.status === 500) setShowError(true);\n\n        await loadData();\n\n        setTimeout(() => { setShowLogo(false) }, 2000)\n    }, []);\n\n    return (\n        <div>\n            {!showLogo && (<div>\n                {showError && (<SweetAlert\n                    title={\"Serial Port Error\"}\n                    type={'error'}\n                    onConfirm={() => setShowError(false)}\n                //dependencies={[this.state.firstName, this.state.lastName]}\n                >\n                    <h4>Please check cable is connected</h4>\n                </SweetAlert>)}\n\n                {configLoaded && (<MainWindow {...props} />)}\n            </div>)}\n\n            {showLogo && (<div>\n                <img src={logo} style={{ heigh: '100vh', width: '100%', marginTop: 'auto' }} />\n            </div>)}\n        </div>\n\n    )\n}\n\nexport default Main;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Settings from './components/settings';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>        \n        <Switch>\n          <Route path='/settings' component={Settings} />\n          <Route path='/' component={Main}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport configSlice from './reducer';\n\nexport default configureStore({\n  reducer: {\n      'Config': configSlice\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport store from './store/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <div>\n        <App />\n      </div>\n     \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}